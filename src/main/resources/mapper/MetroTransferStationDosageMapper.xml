<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.evision.dosage.mapper.vehicle.MetroTransferStationDosageMapper">
    <resultMap id="BaseResultMap" type="com.evision.dosage.pojo.entity.vehicle.MetroTransferStationDosageEntity">
        <result column="data_category" property="dataCategory" jdbcType="VARCHAR"/>
        <result column="station" property="station" jdbcType="VARCHAR"/>
        <result column="first_quarter_measure_result" property="firstQuarterMeasureResult" jdbcType="VARCHAR"/>
        <result column="second_quarter_measure_result" property="secondQuarterMeasureResult" jdbcType="VARCHAR"/>
        <result column="third_quarter_measure_result" property="thirdQuarterMeasureResult" jdbcType="VARCHAR"/>
        <result column="fourth_quarter_measure_result" property="fourthQuarterMeasureResult" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="disabled" property="disabled" jdbcType="INTEGER"/>
        <result column="deleted" property="deleted" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,
        data_category,
        station,
        first_quarter_measure_result,
        second_quarter_measure_result,
        third_quarter_measure_result,
        fourth_quarter_measure_result,
        create_time,
        update_time,
        user_id,
        disabled,
        deleted
    </sql>
    <select id="queryValidData" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM metro_transfer_station_dosage
        WHERE DISABLED = 1
    </select>
    <insert id="add" parameterType="com.evision.dosage.pojo.entity.vehicle.MetroTransferStationDosageEntity">
        INSERT metro_transfer_station_dosage (
        data_category,
        station,
        first_quarter_measure_result,
        second_quarter_measure_result,
        third_quarter_measure_result,
        fourth_quarter_measure_result,
        create_time,
        update_time,
        user_id,
        disabled,
        deleted
        ) VALUES (
        #{dataCategory},
        #{station},
        #{firstQuarterMeasureResult},
        #{secondQuarterMeasureResult},
        #{thirdQuarterMeasureResult},
        #{fourthQuarterMeasureResult},
        sysdate(),
        sysdate(),
        #{userId},
        #{disabled},
        #{deleted}
        )
    </insert>
    <select id="queryValidByKeys" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM metro_transfer_station_dosage
        WHERE disabled = 1 AND data_category = #{dataCategory} AND station = #{station}
    </select>
    <update id="updateDisabled" parameterType="com.evision.dosage.pojo.entity.vehicle.MetroTransferStationDosageEntity">
        UPDATE metro_transfer_station_dosage SET disabled = 0
        WHERE data_category = #{dataCategory} AND station = #{station} AND disabled = 1
    </update>
    <update id="delete" parameterType="com.evision.dosage.pojo.entity.vehicle.MetroTransferStationDosageEntity">
        UPDATE metro_transfer_station_dosage SET deleted = 1
        WHERE data_category = #{dataCategory} AND station = #{station} AND disabled = 1
    </update>
    <select id="getHistory" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM metro_transfer_station_dosage
        WHERE disabled = 0 AND data_category = #{dataCategory} AND station = #{station}
    </select>
    <select id="queryValidDataFowWeb" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM metro_transfer_station_dosage
        WHERE disabled = 1
        <choose>
            <when test="incloudDel==null or incloudDel==0">
                and deleted = #{incloudDel}
            </when>
            <otherwise>
                or deleted = #{incloudDel}
            </otherwise>
        </choose>
        AND ( data_category like #{queryName} OR station like #{queryName} ) order by ${orderField} ${isAsc}
    </select>
</mapper>